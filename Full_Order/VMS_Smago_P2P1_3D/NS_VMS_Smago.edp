///////////////
// FreeROM 
///////////////

/////////////////////////
//// NS + VMS-Smago   ///
/////////////////////////

// Codigo para resolver el problema 3D de EF de VMS-Smago con estabilizacion LPS en la presion. 
// Elemento Finito P2-P1 

verbosity = 0;

// Cargamos librerias
load "iovtk" 
load "medit"

// Cargamos macros
include "Macros_3D.idp"

// Creamos la malla
include "CuboN.idp"

// Definimos los espacios de EF y de los EF locales
include "FE_Spaces_NoStab_VP_3D.idp"

// Definimos los parametros a usar
include "Parametros_3D.idp"

// Definimos las matrices de interpolacion y derivacion
// include "Interp_matrix_3D.idp"
include "Interp_matrix_3D_Local.idp"

Reynolds = 3500;
real nu=1./Reynolds;

/////////////////////////////////////////////
// Resolvemos el problema de EF: Cavidad 3D//
/////////////////////////////////////////////

Vh4P2L [uEF, uEFY, uEFZ, uEFP]; 
Vh4P2L [uEFp, uEFpY, uEFpZ, uEFpP]; // guardamos la iteraci√≥n anterior para calcular el error
VhP1dcL uEFdX, uEFdY, uEFdZ, uEFYdX, uEFYdY, uEFYdZ, uEFZdX, uEFZdY, uEFZdZ; //las derivadas de uEF del paso anterior CON LEVANTAMIENTO
VhP2L uprev, uprevY, uprevZ; // La sol del paso anterior con Levantamiento
VhP1dcL Gr; // Para el termino de VMS-Smagorinsky

include "FE_VMS_3D.idp"


Vh4P2 [uEFG, uEFGY, uEFGZ, uEFGP]; 
reduceSolution(uEF,uEFG,MatAVh4P2.D,mapVh4P2);

int[int] fforder=[1,1,1,1];
savevtk("NS.vtu", Th, [uEFG, uEFGY, uEFGZ], uEFGP, dataname="Velocity Pressure", order=fforder, bin=true);
