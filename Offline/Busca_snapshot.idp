///////////////
// FreeROM 
///////////////



if (search(ReSnapshots, Reynolds, 1.e-9)==-1){
	// Defino las variables que usaremos para obtener la solucion de EF

	VhP2 uprevL, uprevLY; // La sol del paso anterior con Levantamiento
	VhP1dc Gr; // Para el termino de VMS-Smagorinsky

	include "../../Full_Order/VMS_Smago_LPS_pres_2D/FE_VMS_LPS_2D.idp"
	
	real[int] ReSnapshotsNEW(ReSnapshots.n + 1); //Voy a redefinir el vector con los Snapshots calculados
	ReSnapshotsNEW(0:ReSnapshots.n - 1) = ReSnapshots;
	ReSnapshotsNEW(ReSnapshots.n) = Reynolds;
	
	write("../../Snapshots/VMS_Smago_LPS_pres_2D/Snapshots.txt", ReSnapshotsNEW, 0, 0); //0,0 -> No append + No mostrar por pantalla 
	
	SnapX = uEF;
	SnapY = uEFY;
	SnapP = uEFP;
		
	// Guardamos los snapshots 
	write("../../Snapshots/VMS_Smago_LPS_pres_2D/Vx_" + Reynolds + ".txt", SnapX[], 0, 0);
	write("../../Snapshots/VMS_Smago_LPS_pres_2D/Vy_" + Reynolds + ".txt", SnapY[], 0, 0);	
	write("../../Snapshots/VMS_Smago_LPS_pres_2D/P_" + Reynolds + ".txt", SnapP[], 0, 0);

	SnapX = SnapX + Lev;
	SnapY = SnapY + LevY;
	
	[uEF, uEFY, uEFP] = [SnapX, SnapY, SnapP];
}
else{

	readvector("../../Snapshots/VMS_Smago_LPS_pres_2D/Vx_" + Reynolds + ".txt", real, SolX, 0);
	SnapX[] = SolX;
	readvector("../../Snapshots/VMS_Smago_LPS_pres_2D/Vy_" + Reynolds + ".txt", real, SolY, 0);
	SnapY[] = SolY;
	readvector("../../Snapshots/VMS_Smago_LPS_pres_2D/P_" + Reynolds + ".txt", real, SolP, 0);
	SnapP[] = SolP;
	
	SnapX = SnapX + Lev;
	SnapY = SnapY + LevY;
	
	[uEF, uEFY, uEFP] = [SnapX, SnapY, SnapP];	
}
