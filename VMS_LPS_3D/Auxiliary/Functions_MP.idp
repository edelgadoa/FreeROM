// Go from Global vector of magic points to Local vectors of M
func int[int] MagicPointG2L(int[int] &map, int[int] &MagicPoint){
	int NMagic = MagicPoint.n;
	int NMagicL = 0;
	int[int] LocalMagicPoint(NMagic);
	for (int i=0; i<NMagic; i++){
		if (search(map, MagicPoint(i))!=-1){
			LocalMagicPoint(NMagicL) = search(map, MagicPoint(i));
			NMagicL++;	
		}	
		//if(mpirank==1)cout<<LocalMagicPoint(:,1)<<", mpirank:"<<mpirank<<endl;
	}
	return LocalMagicPoint(0:NMagicL-1);
}

//Number of processors that have the Magic Points
func real[int] NumberMagicPoint(int[int] &map, int[int] &MagicPoint){ 
	int NMagic = MagicPoint.n;
	real[int] Mapping(NMagic);
	Mapping = 0;
	for (int i=0; i<NMagic; i++){
		if (search(map, MagicPoint(i))!=-1){
			Mapping(i) = 1;
		}	
	}
	return Mapping(0:NMagic-1);
}

//Weight for each Magic Point
func real[int] WeightMagicPoint(real[int] &NumberMagicPoints){
    real[int] Weights(NumberMagicPoints.n);
    mpiAllReduce(NumberMagicPoints, Weights, mpiCommWorld, mpiSUM);
    Weights = 1./Weights;
    return Weights;
}