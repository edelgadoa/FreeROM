///////////////
// FreeROM 
///////////////

///////////////////////////////////
//Matriz SMAGORINSKY filtrada
///////////////////////////////////	

Gr = MOD(uEF); //Aunque parezca que el gradiente se calcula de la solucion sin levantamiento, lo hace ya con el levantamiento, por como he definido uEFXdX, uEFXdY, etc.


Vh4P1dc [Levf, LevfY, LevfZ, LevfP];


varf FVSmago([uu,uuY,uuZ,pun],[v,vY,vZ,qun]) = intN(Th)((CS*hTriangle)^2*Gr*UporV(uu,v));
varf FVSmagob([un1,un2,un3,pun],[v,vY,vZ,qun]) = - intN(Th)((CS*hTriangle)^2*Gr*UporV(Levf,v));

	
matrix M = FVSmago(Vh4P1dc,Vh4P1dc);
real[int] bSx(Vh4P2.ndof), bSy(Vh4P2.ndof), bSz(Vh4P2.ndof);

matrix DXX,DYY,DZZ;


{
	matrix Maux, MauxG; 
	//COMPONENTE X 
	Maux = DX4P2*IPh4P24P1;
	DXX = (Maux')*M;
	DXX = DXX*Maux;
	
	MauxG = DX4P2*IPh4P24P1;
	Levf[] = MauxG*Lev[]; //seg miembro x
	real[int] bS = FVSmagob(0,Vh4P1dc);
	bSx = (Maux')*bS;
	
	//COMPONENTE Y
	Maux = DY4P2*IPh4P24P1;
	DYY = (Maux')*M;
	DYY = DYY*Maux;
	
	MauxG = DY4P2*IPh4P24P1;
	Levf[] = MauxG*Lev[]; //seg miembro y
	bS = FVSmagob(0,Vh4P1dc);
	bSy = (Maux')*bS;
	
	//COMPONENTE Z
	Maux = DZ4P2*IPh4P24P1;
	DZZ = (Maux')*M;
	DZZ = DZZ*Maux;
	
	MauxG = DZ4P2*IPh4P24P1;
	Levf[] = MauxG*Lev[]; //seg miembro Z
	bS = FVSmagob(0,Vh4P1dc);
	bSz = (Maux')*bS;
}

	
Smago = DXX + DYY + DZZ;
bSmago = bSx + bSy;
bSmago += bSz;

