write("Output.txt","initializing Reduced Matrixes..."+N,1,1);
initialization(StoN,NSN,SmaN,N);
initialization(StoNL,NSNL,SmaNL,N);
write("Output.txt","   Building Reduced Matrixes...",1,1);
real time=mpiWtime();
matrixBR(base);
bigtosmall(StoN,NSN,SmaN)
time=mpiWtime()-time;
write("Output.txt","    - time="+time,1,1);
write("Output.txt", "Writing the basis..." ,1,1);
write("../results/basisVel"+N+".txt",Nv,0,0);
write("../results/basisPres"+N+".txt",Np,0,0);
for(int it=0;it<Nv+Np;it++)write("../results/basisVel"+N+".txt",baseVel[it][],1,0);
for(int it=0;it<Np;it++)write("../results/basisPres"+N+".txt",basePres[it][],1,0);
IFMACRO(prob,"Stokes")writeStoN(N,StoN);ENDIFMACRO
IFMACRO(prob,"NS")writeStoN(N,StoN);writeNSN(N,NSN);ENDIFMACRO
IFMACRO(prob,"Smago")writeStoN(N,StoN);writeNSN(N,NSN);writeSmaN(N,SmaN);ENDIFMACRO
real[int] uNb(N);
VhGVP defVP(errorexacto);
for(int inRe=0;inRe<niRe;inRe++)
{
	Re=vtrain(inRe);
	write("Output.txt","   - Reynold="+Re[0],1,1);
	BRSta(uBR,uNb,Re,StoN,NSN,SmaN);
	if(1) // uso del error exacto
	{
		EFSta(uEF,Re);
		// estimate(uEF[nEF],uEFY[nEF],estiEF(inRe));
		// write("Output.txt","    - estimate EF= "+estiEF(inRe),1,1);
		// estimate(uBR[nEF],uBRY[nEF],estiBR(inRe));
		// write("Output.txt","    - estimate BR= "+estiBR(inRe),1,1);
		errorexacto[]=uEF[nEF][]-uBR[nEF][];
		errorexacto[]=abs(errorexacto[]);
		delta(inRe)=normL2(errorexacto[],prodVP);
		// plot([uEF[nEF],uEFY[nEF]],value=1,wait=1,cmm="uEF");
		// plot([uBR[nEF],uBRY[nEF]],value=1,wait=1,cmm="uBR");
		// plot(defVel(errorexacto),value=1,cmm="vel");
		// plot(errorexactoP,value=1,fill=1,cmm="pres");
		write("Output.txt","    - Exact error= "+delta(inRe),1,1);
	}
	if(0)
	{
		estimate(uBR[nEF],uBRY[nEF],delta(inRe));
		write("Output.txt","    - estimate= "+delta(inRe),1,1);
	}
	if(0)
	{
		include "../auxiliary/search.idp";
		// EFSta(uEF,Re);
		// estimate(uEF[nEF],uEFY[nEF],estiEF(inRe));
		// write("Output.txt","    - estimate EF= "+estiEF(inRe),1,1);
		estiEF(inRe)=interp1(selectedRe(0,0:nselectedRe-1),selectedRe(1,0:nselectedRe-1),Re[0]);
		estimate(uBR[nEF],uBRY[nEF],estiBR(inRe));
		write("Output.txt","    - estimate BR= "+estiBR(inRe),1,1);
		delta(inRe)=abs(estiEF(inRe)-estiBR(inRe));
		write("Output.txt","    - estimate= "+delta(inRe),1,1);
	}
	if(0)
	{
		EFSta(uEF,Re);
		estimate(uEF[nEF],uEFY[nEF],estiEF(inRe));
		write("Output.txt","    - estimate EF= "+estiEF(inRe),1,1);
		estimate(uBR[nEF],uBRY[nEF],delta(inRe));
		write("Output.txt","    - estimate BR= "+delta(inRe),1,1);
	}
}

// Modificacion del criterio del Greedy
include "../auxiliary/search.idp";
if (search(ReSelec,vtrain(delta.imax))>0){
	// Se haya la diferencia de los espectros
	real[int] pdelta(niRe); pdelta = 0.;
	pdelta = delta-delta0;
	pdelta = abs(pdelta);
        write("Output.txt","pdelta...",1,1);
        write("Output.txt",pdelta,1,1);
	while(search(ReSelec,vtrain(pdelta.imax))>0){
		// Definicion de elementos auxiliares
		pdelta(pdelta.imax) = 0.;
		write("Output.txt","pdelta...",1,1);
		write("Output.txt",pdelta,1,1);
	}
	// Escogemos el valor para la mayor diferencia
	errGreedy(ip+1)=delta(pdelta.imax);
	ReBest(0:numparam-1,ip+1)=selected(0:numparam-1,pdelta.imax);
	ReSelec(ip+1) = vtrain(pdelta.imax);
}
else{
    errGreedy(ip+1)=delta.max;
    ReBest(0:numparam-1,ip+1)=selected(0:numparam-1,delta.imax);
    ReSelec(ip+1) = vtrain(delta.imax);
}
delta0 = delta;
write("Output.txt","Done with N="+N+" and the historical error...",1,1);
write("./results/errgreedy.txt",errGreedy(1:ip+1),0,1);
write("./results/delta"+ip+".txt",delta,0,0);
write("./results/estiEF"+ip+".txt",estiEF,0,0);
write("./results/estiBR"+ip+".txt",estiBR,0,0);
write("./results/delta"+ip+".txt",N,1,0);
estiBR0=estiBR;
