NewMacro EulerExp(Re,inicond,sol)
{
	matrix ASta,AF;
	real[int] bSta(VhLVP.ndof),bF(VhLVP.ndof);
	{
		varf a(defVP(u),defVP(v))=
			intN(ThL)(
				fixmacro(Re,u,v)
				+dert(u,v)
	   			 )
			;
		ASta=a(VhLVP,VhLVP);
	}
	VhGVP defVP(un1),defVP(un0);
	errEF=10;un1[]=0;
	un0[]=inicond[];
	uEF[0][]=un0[];
	int cont=1;
	real tsave=dtsave+T0;
	for(real ti=T0+dt;ti<=T+epsEF;ti+=dt)
	{		
		// plot(defVel(un0),value=1,wait=0,fill=1,cmm="ti="+ti);//,ps="../solutions/eps/uNN"+NN+"t"+ti+".eps");
		{
			varf a(defVP(u),defVP(v))=
				intN(ThL)(dert(un0,v)
						);
			bF=a(0,VhLVP);
		}
		AF=ASta;
		solvesystem(AF,bF,un1,VP);
		un0[]=un1[];
		if(abs(ti-tsave)<epsEF)
		{
			write("Output.txt"," - ti= " +ti+" saved.",1,1);
			write("../solutions"+esquema+"/txt/SolEF"+prob+"NN"+NN+"Reynold"+Re[0]+"t"+ti+".txt",un1[],0,0,0,20);
			tsave+=dtsave;
			uEF[cont][]=un1[];
			cont++;
		}
	}
	// uEF[]=un1[];
}
EndMacro
NewMacro EFSta(uEF,Re)
{
	VhGVP defVP(u0VP);
	if(T0>0)
	{
		ifstream fileRe("../solutions"+esquema+"/txt/SolEF"+prob+"NN"+NN+"Reynold"+Refijo+"t"+T0+".txt");
		fileRe >> u0VP[];
	}
	else
	{
		readic(16,alpha);
	}
	include "../auxiliary/search.idp";
	if(search(ReSta,Re,1.e-9)==-1)
	{
		// real[int] energy(nEF);
		if(esquema=="EulerExp")EulerExp(Re,u0VP,uEF);
		updateparameters(ReSta,Re);
	}
	else
	{
		write("Output.txt","   Reading the solution v...",1,1);
		uEF[0][]=u0VP[];
		int contti=1;
		for(real ti=T0+dtsave;ti<=T+epsEF;ti+=dtsave)
		{
			ifstream fileRe("../solutions"+esquema+"/txt/SolEF"+prob+"NN"+NN+"Reynold"+Re[0]+"t"+ti+".txt");
			fileRe >> uEF[contti][];
			contti++;
		}		
	}
}
EndMacro

NewMacro residualb(sol,Reynold,residual)
{
	VhGVP defVP(u);
	u[]=sol[];
	u[]+=G[];
	// plot(defVel(u),value=1,wait=0);
	matrix Ares;real[int] bres(VhLVP.ndof);
	{
		varf a(defVP(u0),defVP(v))=
			intN(ThL)(1./Refijo*gradgrad(u0,v)+u0P*vP)
			+intN(ThL)(
				1./Reynold*gradgrad(u,v)
				-u#P*div(v)
				+vP*div(u)
				+u#P*vP*epspen
	   			 )
			 +BC(u0,cero);
		Ares=a(VhLVP,VhLVP);bres=a(0,VhLVP);
	}
	solvesystem(Ares,bres,residual,VP);
}
EndMacro

NewMacro supremizer(uEF,Re,sol)
{
	matrix Asup;real[int] bsup(VhLVel.ndof);
	{
		varf a(defVel(u),defVel(v))=
			intN(ThL)(1./Re*gradgrad(u,v))
			+intN(ThL)(-uEF*div(v));
		Asup=a(VhLVel,VhLVel);bsup=a(0,VhLVel);
	}
	solvesystem(Asup,bsup,sol,Vel);
}
EndMacro

macro matrixprodV(prodV)
matrix prodV;
{
	varf a(defVel(u),defVel(v))=
		intN(Th)(1./Refijo*gradgrad(u,v));
	prodV=a(VhGVel,VhGVel);
}
// EOM
macro matrixprodP(prodP)
matrix prodP;
{
	varf a(u,v)=
		intN(Th)(u*v);
	prodP=a(VhGP1,VhGP1);
}
// EOM
macro matrixprodVP(prodVP)
matrix prodVP;
{
	varf a(defVP(u),defVP(v))=
		intN(Th)(1./Refijo*gradgrad(u,v)+uP*vP);
	prodVP=a(VhGVP,VhGVP);
}
// EOM
macro matrixprodL2(prodL2)
matrix prodL2;
{
	varf a(defVP(u),defVP(v))=
		intN(Th)(uporv(u,v));
	prodL2=a(VhGVP,VhGVP);
}
// EOM
macro matrixprodH1(prodH1)
matrix prodH1;
{
	varf a(defVP(u),defVP(v))=
		intN(Th)(gradgrad(u,v));
	prodH1=a(VhGVP,VhGVP);
}
// EOM
NewMacro matrixgeneration();
matrix matrixStoNnu;
{
	varf a(defVel(u),defVel(v))=intN(Th)(gradgrad(u,v));
	matrixStoNnu=a(VhGVel,VhGVel);
}
matrix matrixStoNdiv;
{
	varf a(defVel(u),[p])=intN(Th)(div(u)*p);
	matrixStoNdiv=a(VhGVel,VhGP1);
}
matrix matrixStoNpen;
{
	varf a(u,v)=intN(Th)(epspen*u*v);
	matrixStoNpen=a(VhGP1,VhGP1);
}
matrix matrixNSNdt;
{
	varf a(defVel(u),defVel(v))=intN(Th)(uporv(u,v));
	matrixNSNdt=a(VhGVel,VhGVel);
}
EndMacro