///////////////
// FreeROM 
///////////////

int sEIM = 0; // contador con el indice para el vector de snapshots
for(int i=0; i<niRe; i++){
	for(real ti = T0+dt; ti<=TF; ti+=dt){
		Reynolds = vReynolds(i);
		
		// Cargamos los Snapshots 
		readvector("../Snapshots/Re_" + Reynolds + "_t_" + ti + ".txt", real, SnapGlobal, 0);
		
		Vh3P2perG [SnapG, SnapGY, SnapGP];
		SnapG[] = SnapGlobal;
		
		Vh3P2per [Snap, SnapY, SnapP];
		Snap[] = SnapG[](mapVh3P2per); //Paso los snapshots a local
		
		BVX[sEIM] = Snap; BVY[sEIM] = SnapY;

		{
			VhP2per udcAux;
			udcAux[] = IPhP2P1*BVX[sEIM][];
			BVdX[sEIM][] = DXP2*udcAux[];
			BVdY[sEIM][] = DYP2*udcAux[];

			udcAux[] = IPhP2P1*BVY[sEIM][];
			BVYdX[sEIM][] = DXP2*udcAux[];
			BVYdY[sEIM][] = DYP2*udcAux[];
		}
		
		sEIM++; 
	}
}

// for(int i=0; i<nSnapshots; i++){
// 	vReynolds(i)=Remin+i*(Remax-Remin)/(nSnapshots-1);
// 	Vh3P2per [SauxX,SauxY,SauxP];
	
// 	Vh3P2perG [uG,uGY,uGP];
// 	readvector("../Snapshots/Re_" + vReynolds(i) + "_t_" +TF+ ".txt", real, Sol, 0); uG[] = Sol;
// 	SauxX[] = uG[](mapVh3P2per);
	
// 	// Cargamos los Snapshots 
// 	BVX[i] = SauxX;
// 	BVY[i] = SauxY;

// 	{
// 		VhP2per udcAux;
// 		udcAux[] = IPhP2P1*BVX[i][];
// 		BVdX[i][] = DXP2*udcAux[];
// 		BVdY[i][] = DYP2*udcAux[];

// 		udcAux[] = IPhP2P1*BVY[i][];
// 		BVYdX[i][] = DXP2*udcAux[];
// 		BVYdY[i][] = DYP2*udcAux[];
// 	}
// }
