///////////////
// FreeROM 
/////////////// 

readmatrix("../EIM/Bases_EIM/muEIM_Smago.txt", real, muEIM, 0); // Ahora muEIM es una matriz

int Mbases = muEIM.n;

VhP1dcper[int] EIMSmago(Mbases);

// Cargo los elementos del EIM SMAGO
for (int i=0; i<Mbases; i++){
	VhP1dcperG EIMSmagoG;
	readvector("../EIM/Bases_EIM/Base_EIM_" + muEIM(i,0) + "_t_" + muEIM(i,1) + ".txt", real, BaseEIM, 0);
	EIMSmagoG[] = BaseEIM;
	EIMSmago[i][] = EIMSmagoG[](mapVhP1dcper); //Cargo la bases EN LOCAL
}

// Cargo la Matriz de EIMSmago
readmatrix("../EIM/Bases_EIM/MatrizEIM_Smago.txt", real, MatrixEIMSmago, 0);
matrix MEIMS = MatrixEIMSmago;
set(MEIMS, solver= UMFPACK);

//Cargo los Puntos Magicos Smago y los paso a local para trabajar con ellos
readvector("../EIM/Bases_EIM/TintEIM_Smago.txt", int, PuntosMSmago, 0);
int[int] PuntosMSmagoL = MagicPointG2L(mapVhP1dcper, PuntosMSmago); // Vector local de Puntos magicos
real[int] NumberPMSmago = NumberMagicPoint(mapVhP1dcper, PuntosMSmago); // 1: esta en proc, 0: no esta en proc
real[int] WeightPMSmago = WeightMagicPoint(NumberPMSmago); //Pesos de cada Magic Point
