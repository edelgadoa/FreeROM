// Espectro

// Cargamos macros
include "../../Auxiliary/IO.idp"
include "../../Auxiliary/Macros_2D.idp"

int NN = 32;
real x01 = -0.5, x11 = 0.5;
real y01 = -0.5, y11 = 0.5;
mesh Th = square(NN,NN,[x01+(x11-x01)*x,y01+(y11-y01)*y],flags=1);
int NN2 = 64;
mesh Th2 = square(NN2,NN2,[x01+(x11-x01)*x,y01+(y11-y01)*y],flags=1);
fespace VhhP1(Th2,P1);

// Definimos los espacios de EF 
include "FE_Spaces_NoStab_VP_2D.idp"

// Cargamos el modulo para hacer transformadas
include "../../Auxiliary/fourier.idp"

real Reynolds = 8500;
real ti = 15;
readvector("../../Snapshots/Vx_" + Reynolds +  "_t_" +ti+ ".txt", real, SX, 0);
readvector("../../Snapshots/Vy_" + Reynolds +  "_t_" +ti+ ".txt", real, SY, 0);

Vh3P2per [uEF, uEFY,uEFP];
uEF[] = SX;
uEFY[] = SY;
plot([uEF,uEFY]);

VhP1 <complex> uEFc, uEFcY, auxc = 0.;
uEFc = uEF+auxc;
uEFcY = uEFY+auxc;
plot([uEFc,uEFcY]);

real[int] energyk = espectro2DDFFT(uEFc[], uEFcY[], NN+1);
write("../../Snapshots/Espectro_inicial.txt", energyk, 0, 0);


VhhP1 uEF2,uEF2Y;
uEF2 = uEF;
uEF2Y = uEFY;

VhhP1 <complex> uEF2c, uEF2cY, aux2c = 0.;
uEF2c = uEF2+aux2c;
uEF2cY = uEF2Y+aux2c;


real[int] energyk2 = espectro2DDFFT(uEF2c[], uEF2cY[], NN2+1);
write("../../Snapshots/Espectro_inicial2.txt", energyk2, 0, 0);