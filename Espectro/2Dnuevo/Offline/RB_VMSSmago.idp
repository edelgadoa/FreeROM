///////////////
// FreeROM 
/////////////// 	

// Comenzamos a resolver el problema reducido

matrix MVRB; //solo las interaciones velocidad-velocidad	
MVRB = nuRB * DiffRBi;
//MRB += DivPRBi;
//MRB += DivPRBTi;
MVRB += (1./dt) * DTRBi;
// MRB += PenRBi;	

// mpi(cout<<MRB<<endl;)

for(real ti=T0+dt;ti<=TF;ti+=dt){
	// ConvRBi = 0;
	// SmagoRBi = 0;
	bDTRBi = 0;
	bRB = 0;
	mpi(cout<<"matriz de conveccion"<<endl;)

	// Matriz de conveccion
	for (int s=0; s<NbasesV; s++){
		real[int,int] ConvRBN(NbasesV, NbasesV);
		matrix ConvRBaux;
		ConvRBN = ConvRB[s](0:NbasesV-1,0:NbasesV-1);
		ConvRBN *= uRBv(s);
		ConvRBaux = ConvRBN;
		ConvRBi = ConvRBi + ConvRBaux;
	}

	// Matiz de Smagorinsky
	real[int] bEIMS(Mbases), sigmaEIMS(Mbases), GraduN(4), uN(NbasesV);
	uN = uRBv(0:NbasesV-1); //solo las componentes de la velocidad
	for(int s=0; s<Mbases; s++){
		real[int, int] Gradint(4,NbasesV);
		Gradint = GradPM[s](0:3, 0:NbasesV-1);
		GraduN = Gradint * uN;
		// mpi(cout<<GraduN<<endl;)
		bEIMS(s) = sqrt(GraduN'*GraduN);
	}
	//mpi(cout<<bEIMS<<endl;)
	sigmaEIMS = MEIMS^-1 * bEIMS;
	// cout<<sigmaEIMS<<endl;
	for (int s=0; s<Mbases; s++){
		real[int,int] SmagoRBN(NbasesV, NbasesV);
		matrix SmagoRBaux;
		SmagoRBN = SmagoRB[s];
		SmagoRBN *= sigmaEIMS(s);
		SmagoRBaux = SmagoRBN;
		SmagoRBi = SmagoRBi + SmagoRBaux; 
	}
	//mpi(cout<<SmagoRBi<<endl;)

	
	// Segundos miembro dt
	for (int s=0; s<NbasesV; s++){
		real[int] bDTRBint(NbasesV);
		bDTRBint = DTRB(s,:);
		bDTRBint = uRBv(s)*bDTRBint;
		bDTRBi += bDTRBint;
	}
	
	// Construyo la matriz y Segundo miembros para el problema reducido
	MVRB += ConvRBi;
	MVRB += SmagoRBi; 
	
	//mpi(cout<<MRBF<<endl;)
	bRB += (1./dt) * bDTRBi;
	bRB(NbasesV:I-1) = 0; //Nos aseguramos que es cero en los grados de libertad de la presion

	// mpi(cout<<bRB<<endl;)
	// Resuelvo el problema reducido
	real[int] uRBvp = uRBv;
	matrix MRBs = [[MVRB , DivPRBTi],[DivPRBi, PenRBi]];
	set(MRBs, solver=UMFPACK);

	//mpi(cout<<"Aqui"<<endl;)
	// real[int,int] MRBinv = MRB^-1;
	uRBv = MRBs^-1*bRB;
	//mpi(cout<<uRBv<<endl;)
}
