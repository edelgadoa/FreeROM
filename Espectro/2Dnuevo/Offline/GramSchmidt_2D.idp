///////////////
// FreeROM 
/////////////// 

// Código para calcular las bases ortonormalizadas 
/*
/////////////////////////////////////////////
// Ortonormalizacion de la Presion

mpi(cout<<"aa" <<endl;)

real[int, int] MBasePi = MBaseP(0:VhP1per.ndof-1, 0:i-1);

BaseP[i][] = OrtoL2(BaseP[i][], MBasePi);

// Doble Ortonormalización
BaseP[i][] = OrtoL2(BaseP[i][], MBasePi);

mpi(cout<<"Inicializacion matrices..." <<endl;)

////////////////////////////////////////////
real[int,int] MBaseVi = MBaseV(0:Vh2P2per.ndof-1, 0:i-1);

BaseV[i][] = OrtoX(BaseVel[i][], MBaseVi, MNormaVel);

mpi(cout<<"Inicializacion matrices..." <<endl;)

// Doble Ortonormalización
BaseV[i][] = OrtoX(BaseVel[i][], MBaseVi, MNormaVel);

// Para el filtrado
BaseVel[i] = BaseV[i]; BaseVelY[i] = BaseVY[i];
*/
///////////////////////////////////////////////////////////////////////////////
func real[int] proy(real[int] & u,real[int] & v, matrix & X)
{
	real[int] aux=X*u;
	real vu=v'*aux;
	real uu=u'*aux;
	real[int] result=u;
	result*=vu/uu;
	return result;
}
macro ortho(base,NN,prod)
{real[int] proyection(base[0][].n);
proyection=0;
for(int ii=0;ii<NN-1;ii++)proyection+=proy(base[ii][],base[NN-1][],prod);
base[NN-1][]-=proyection;}
//EOM