Mat Asup;// = MatAVh2P2per; 
{
	macro def(i) [i, i#Y] // EOM
	macro init(i) [i, i] // EOM
	MatCreate(ThL, Asup, Pk2P2);
}
real[int] bsup(Vh2P2perL.ndof);

// VhP1per PresG;
// VhP1perL PresL;
//
// PresL[] = BaseP[i][];
//
// reduceSolution(PresL, PresG, MatAVhP1per.D, mapVhP1per);

// if (i==0) plot(PresG, value=1, cmm="Base"+i);

varf Supremizer([u,uY],[v,vY])= int2d(ThL)(//(1./Refijo+MOD(uFijo))*
gradugradv(u,uY,v,vY)) + int2d(ThL)(1e-6*(u*v + uY*vY)) - int2d(ThL)(BaseP[i]*div(v,vY));

matrix Asuptemp = Supremizer(Vh2P2perL,Vh2P2perL);
Asup = Asuptemp;
bsup = Supremizer(0,Vh2P2perL);


string parametro1 = "-ksp_type gmres -ksp_max_it 200";
string parametro2 = "-pc_factor_mat_solver_type mumps";

set(Asup, sparams = "-pc_type lu"); //TODO comprobar con otros parametros

supEF[] = Asup^-1*bsup; 
//plotMPI(ThL, Su[0], PkP1, def, real, cmm="Base 0");)

// Vh2P2per [supEFG, supEFGY];
// //
// reduceSolution(supEF, supEFG, MatAVh2P2per.D, mapVh2P2per);
//
// if (i==0) plot([supEFG, supEFGY], cmm="sup"+i);
// 
