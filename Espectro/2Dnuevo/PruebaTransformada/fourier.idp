// Archivo auxiliar calculo de transformadas de fourier

// Cuando se calculen los coeficientes de la transformada de fourier, 
// la función debe llamarse uFourier y ser compleja.

// Si tengo varias componentes, debo llamar varias veces a FourierTransform2D, 
// redefiniendo uFourier.

func complex[int,int] FourierTransform2D(int kmax){

    complex[int,int] FCoefs(2*kmax+1,2*kmax+1);

    for(int ii=-kmax; ii<=kmax; ii++){
        for(int jj=-kmax; jj<=kmax; jj++){
            func fourier = exp(-1*1i*2*pi*(x*ii+y*jj));
            complex coefaux = int2d(Th)(uFourier*fourier);
            FCoefs(ii+kmax,jj+kmax) = real(coefaux);
        }
    }

    return FCoefs;
}

// Para calcular la función inversa hay que llamar una función auxiliar uFourier.
func complex[int] FourierInverse2D(complex[int,int] & Coefs){

    int kcoefs = (Coefs.n-1)/2;
    uFourier = 0;

    for(int ii = -kcoefs; ii<=kcoefs; ii++){
        for(int jj = -kcoefs; jj<=kcoefs; jj++){
            complex FCoef = Coefs(ii+kcoefs,jj+kcoefs);
            func BaseFourier = FCoef*exp(-1*1i*2*pi*(x*ii+y*jj));
            Wh<complex> BFaux;
            BFaux = BaseFourier;
            uFourier[] += BFaux[]; // uFourier =  uFourier+BaseFourier;
        }
    }

    return uFourier[];
}