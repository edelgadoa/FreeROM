macro initialization(StoN,NSN,SmagoN,N)
real[int,int] 	StoN#nu(N,N),
				StoN#div(N,N),
				StoN#pen(N,N);
StoN#nu=0;
StoN#div=0;
StoN#pen=0;
real[int,int] NSN#dt(N,N);
NSN#dt=0;
// EOM

macro bigtosmall(StoN,NSN,SmaN)
{
	mpiAllReduce(StoN#L#nu,StoN#nu,mpiCommWorld,mpiSUM);
	mpiAllReduce(StoN#L#div,StoN#div,mpiCommWorld,mpiSUM);
	mpiAllReduce(StoN#L#pen,StoN#pen,mpiCommWorld,mpiSUM);
	mpiAllReduce(NSN#L#dt,NSN#dt,mpiCommWorld,mpiSUM);
}
//EOM

macro StoNnuN(ii,jj)
{
	StoNLnu(ii,jj)=innerprod(base#Vel[ii][],base#Vel[jj][],matrixStoNnu);
}
//EOM
macro StoNdivN(ii,jj)
{
	StoNLdiv(ii+Nv+Np,jj)=innerprod(base#Pres[ii][],base#Vel[jj][],matrixStoNdiv);
}
//EOM
macro StoNpenN(ii,jj)
{
	StoNLpen(ii+Nv+Np,jj+Nv+Np)=innerprod(base#Pres[ii][],base#Pres[jj][],matrixStoNpen);
}
//EOM
macro NSNdtN(ii,jj)
{
	NSNLdt(ii,jj)=innerprod(base#Vel[ii][],base#Vel[jj][],matrixNSNdt);
}
//EOM
// macro NSNugradvwN(ii,jj)
// {
// 	vNSNL(ii,jj)=innerprod(baseVel[ii][],baseVel[jj][],matrixugradvwv);
// }
// //EOM
// macro SmagN(ii,jj,ss)
// {
// 	SmaNL[ss](ii,jj)=innerprod(baseVel[ii][],baseVel[jj][],matrixSma[ss]);
// }
// //EOM
NewMacro matrixBR(base)
{
	VhGVel defVel(base);
	int cont=0;
	for(int ii=0;ii<Nv+Np;ii++)
	{
		if(mpirank==cont%mpisize)
		{
			for(int jj=0;jj<=ii; jj++)
			{
				StoNnuN(ii,jj);NSNdtN(ii,jj);
				if(jj<ii)
				{
					StoNnuN(jj,ii);NSNdtN(jj,ii);
				}
			}
			for(int jj=0;jj<Np;jj++)StoNdivN(jj,ii);
		}
		cont++;
	}
	cont=0;
	for(int ii=0;ii<Np;ii++)
	{
		if(mpirank==cont%mpisize)
		{
			for(int jj=0;jj<=ii; jj++)
			{
				StoNpenN(ii,jj);
				if(jj<ii)StoNpenN(jj,ii);
			}
		}
		cont++;
	}
}
EndMacro

NewMacro BRSta(uBR,uNb,Re,StoN,NSN,SmaN);
{
	real[int,int] StoNnuF(N,N),StoNdivF(N,N),StoNpenF(N,N),ASta(N,N),Ainv(N,N);
	ASta=1./Re[0]*StoN#nu;
	ASta+=StoN#div;
	ASta-=StoN#div';
	ASta+=StoN#pen;
	ASta+=NSN#dt/dtsave;
	if(0)
	{
		if(mpirank==0)
		{
			cout << StoN#nu << endl;
			cout << StoN#div << endl;
			cout << StoN#pen<< endl;
			cout << NSN#dt<< endl;
		}		
	}	
	real[int] bF(N);
	VhGVel defVel(u1);VhGP1 u1P;VhGVP defVP(un1);
	{
		VhGVP defVP(u0VP);
		if(T0>0)
		{
			ifstream fileRe("../solutions"+esquema+"/txt/SolEF"+prob+"NN"+NN+"Reynold"+Refijo+"t"+T0+".txt");
			fileRe >> u0VP[];
		}
		else
		{
			readic(16,alpha);
		}
		defVel(u1)=defVel(u0VP);
	}
	for(int ii=0;ii<Nv+Np;ii++)uNb(ii)=innerprod(u1[],base#Vel[ii][],prodV);	
	load "lapack";
	defVP(un1)=defVP(u1);
	uBR[0][]=un1[];
	int cont=1;
	Ainv=ASta^-1;
	for(real ti=T0+dtsave;ti<=T+epsEF;ti+=dtsave)
	{
		bF=NSN#dt*uNb;
		bF/=dtsave;
		uNb=Ainv*bF;
		u1[]=0;u1P[]=0;
		for(int s=0;s<Nv+Np;s++)u1[]+=uNb(s)*baseVel[s][];
		for(int s=0;s<Np;s++)u1P[]+=uNb(Nv+Np+s)*basePres[s][];
		defVP(un1)=defVP(u1);
		uBR[cont][]=un1[];
		cont++;
	}
}
EndMacro