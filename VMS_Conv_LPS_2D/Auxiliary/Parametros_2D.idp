///////////////
// FreeROM 
///////////////

// Parametros a usar durante la ejecucion del codigo


// Parametros del modelo VMS-Smago con LPS en la presion
real CS = 0.1; // Smago
real Refijo = 1000; // Valor del Reynolds fijo

real cc1 = 16.; // tauk
real cc2 = sqrt(cc1);

VhP0 mk,tKcod,tKTcod,tau;

varf med(unused,v) = int2d(Th)(1.*v);
real[int] medk = med(0,VhP0);
mk[] = sqrt(medk); 

VhP0 hk = hTriangle;
real hT = hk[].max; //El máximo de los diámetros de la malla

//Construyo el vector que bloqueará el residuo de SMAGO
varf CC([un1,un2,unp],[vvel1,vvel2,vpres]) = on(1,2,3,4, un1=1,un2=1); 

real[int] cc = CC(0,Vh3P2);
for (int gf=0; gf<Vh3P2.ndof; gf++){
	cc(gf) = (cc(gf)>10^10) ? 0 : 1;
} 

// Parametros para el problema de EF
real dt = 1;
real epspen = 1e-8;

real ERROR = 10; // inicializacion del error para el bucle

int niterFE = 2000; 
real epsFE = 1e-10;

// Parametros para el problema ROM
int niterRB = 2000;
real epsRB = 1e-10; //parada de problema reducido

real epsGreedy = 5e-5;
real epsEIM = 5e-5;

int NRB = 0;

// Parametros para el RBF
real RBFeps = 1e-5;

// Parametros mu
real Reynolds; // Esto es perceptible de cambiarlo

real Remin = 1000;
real Remax = 5100;

int Ntrain = 165;

real[int] MuTrain(Ntrain);
for (int ig=0; ig<Ntrain; ig++){
	MuTrain(ig) = Remin+ig*(Remax-Remin)/(Ntrain - 1);
}

