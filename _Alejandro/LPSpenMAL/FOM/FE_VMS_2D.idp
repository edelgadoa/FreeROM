///////////////
// FreeROM 
///////////////

// Defininimos la matriz y segundo miembro fijos
matrix MFija;
real[int] bFija(Vh3P2.ndof);

include "Matrices_fijas_NS_2D.idp"

for(real ti=t0+dt;ti<=TF+epsEF;ti+=dt){
	write("Output.txt","t = " + ti,0,1);
	// Comenzamos el bucle iterativo para resolver el problema de EF
	
	// incluimos la matriz del término de convección y segundo miembro término temporal
	matrix MNS;
	real[int] bNS(Vh3P2.ndof);
	
	include "Matrices_variables_NS_2D.idp"
	
	// Definimos la matriz final y segundo miembro final, y resolvemos el sistema
	matrix MFinal;
	real[int] bFinal(Vh3P2.ndof);
	MFinal = MFija;
	MFinal += MNS;
	
	bFinal = bFija;
	bFinal += bNS;

	set(MFinal, solver=sparsesolver);
	uEF[]=MFinal^-1*bFinal;
	
	// Guardamos los snapshots 
	write("../Snapshots/Vx_" + Reynolds + "_t_" +ti+ ".txt", uEF[], 0, 0);
	write("../Snapshots/Vy_" + Reynolds + "_t_" +ti+ ".txt", uEFY[], 0, 0);	
	write("../Snapshots/P_" + Reynolds + "_t_" +ti+ ".txt", uEFP[], 0, 0);

	VhP2 uEFmod;
	VhP2 uEFL, uEFLY;
	uEFL= uEF + Lev;
	uEFLY = uEFY + LevY;
	uEFmod = (uEFL)^2+(uEFLY)^2;
	//plot(uEFmod,fill=1,value=1,cmm="t="+ti);
	plot([uEFL,uEFLY],fill=1,value=1,cmm="t="+ti);
}